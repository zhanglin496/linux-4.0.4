1、访问per-cpu变量时经常要禁止内核抢占。一方面和进程迁移有关，如果访问per-cpu变量的进程被抢占（如发生中断而重新调度），
该进程已经得到自己per-cpu变量的副本的偏移地址，当它被恢复执行并有可能迁移到别的CPU上，这时候该偏移地址对新的CPU
是无效的。另一方面可以防止本地内核代码的并发访问，如果本进程正在访问时被同CPU上的其它进程抢占，其它进程的内核
代码也可能访问相同的变量。